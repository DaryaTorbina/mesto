(()=>{"use strict";var e,t,n,r=(n=".popup__form",(t="formSelector")in(e={formSelector:".popup__form",inputSelector:"popup__text",submitButtonSelector:"popup__button-save",inactiveButtonClass:"popup__button-save_inacive",inputErrorClass:"popup__text_type_error",errorClass:"popup__error_active"})?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e),o=document.querySelector(".popup_profile"),i=(document.querySelector(".popup_mesto"),o.querySelector("#name-input")),a=o.querySelector("#about-input"),u=document.querySelector(".profile__avatar-edit"),c=document.querySelector(".profile"),s=c.querySelector(".profile__edit-button"),l=c.querySelector(".profile__add-button"),f="#element";function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t){var n=t.address,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("".concat(e.status," ").concat(e.statusText))}},{key:"getUserInfo",value:function(){var e=this._address+"/users/me";return fetch(e,{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){var e=this._address+"/cards";return fetch(e,{headers:this._headers}).then(this._checkResponse)}},{key:"getServerData",value:function(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}},{key:"updateUserInfo",value:function(e){var t=this._address+"/users/me";return fetch(t,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"addNewMesto",value:function(e){var t=this._address+"/cards";return fetch(t,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}},{key:"removeMesto",value:function(e){var t=this._address+"/cards/".concat(e);return fetch(t,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"addLikeMesto",value:function(e){var t=this._address+"/cards/likes/".concat(e);return fetch(t,{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"deleteLikeMesto",value:function(e){var t=this._address+"/cards/likes/".concat(e);return fetch(t,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"updateProfileAvatar",value:function(e){var t=this._address+"/users/me/avatar";return fetch(t,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}}])&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t){var n=t.data,r=t.userId,o=t.cardSelector,i=t.handleCardClick,a=t.handleLikeButtonClick,u=t.handleRemoveButtonClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userId=r,this._userMesto=r===n.owner._id,this._imageLink=n.link,this._imageName=n.name,this._name=n.name,this._likes=n.likes,this._cardId=n._id,this._cardSelector=o,this._handleCardClick=i,this._handleLikeButtonClick=a,this._handleRemoveButtonClick=u}var t,n;return t=e,(n=[{key:"_getTemplateElement",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._userMesto&&this._element.querySelector(".element__delete").addEventListener("click",(function(t){e._handleRemoveButtonClick(t)})),this._buttonLike.addEventListener("click",(function(t){return e._handleLikeButtonClick(t)})),this._elementCardImage.addEventListener("click",(function(){return e._handleCardClick()}))}},{key:"generateCard",value:function(){return this._element=this._getTemplateElement(),this._buttonLike=this._element.querySelector(".element__like"),this._countLikeElement=this._element.querySelector(".element__like-count"),this._elementCardImage=this._element.querySelector(".element__image"),this._userMesto||this._element.querySelector(".element__delete").remove(),this._elementCardImage.src=this._imageLink,this._elementCardImage.alt=this._imageName,this._element.querySelector(".element__name").textContent=this._name,this._countLikeElement.textContent=this._likes.length,this._toggleLikeState(),this._setEventListeners(),this._element}},{key:"_toggleLikeState",value:function(){this._checkUserLike()?this.setLike():this.removeLike()}},{key:"setLike",value:function(){this._buttonLike.classList.add("element__like_active"),this.isLiked=!0}},{key:"removeLike",value:function(){this._buttonLike.classList.remove("element__like_active"),this.isLiked=!1}},{key:"updateLikes",value:function(e){this._countLikeElement.textContent=e.length}},{key:"_checkUserLike",value:function(){var e=this;return this._likes.some((function(t){return t._id===e._userId}))}},{key:"getCardId",value:function(){return this._cardId}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var m=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._formElement=n,this._inputList=Array.from(this._formElement.querySelectorAll(".".concat(this._config.inputSelector))),this._buttonElement=this._formElement.querySelector(".".concat(this._config.submitButtonSelector))}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._config.errorClass),e.classList.add(this._config.inputErrorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));t.classList.remove(this._config.errorClass),t.textContent="",e.classList.remove(this._config.inputErrorClass)}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"_setEventListeners",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e.toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"resetValidation",value:function(){var e=this;this.toggleButtonState(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"toggleButtonState",value:function(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._containerElement=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addNewItem",value:function(e){this._containerElement.prepend(e)}},{key:"addItem",value:function(e){this._containerElement.append(e)}}])&&_(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var g=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupElement=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popupElement.classList.add("popup__open"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupElement.classList.remove("popup__open"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListener",value:function(){var e=this;this._popupElement.addEventListener("mousedown",(function(t){(t.target.classList.contains("popup__open")||t.target.classList.contains("popup__button-close"))&&e.close()}))}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function O(e,t){return O=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},O(e,t)}function P(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var I=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._popupForm=n._popupElement.querySelector(".popup__form"),n._inputs=n._popupForm.querySelectorAll(".popup__text"),n._submitCallback=t,n._formElementSubmitButton=n._popupForm.querySelector(".popup__button-save"),n}return t=a,(n=[{key:"getPopupForm",value:function(){return this._popupForm}},{key:"_getInputValues",value:function(){var e={};return this._inputs.forEach((function(t){e[t.name]=t.value})),e}},{key:"getFormInputValues",value:function(){return this._getInputValues()}},{key:"close",value:function(){this._popupForm.reset(),L(C(a.prototype),"close",this).call(this)}},{key:"setEventListener",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){return e._submitCallback(t)})),L(C(a.prototype),"setEventListener",this).call(this)}},{key:"renderLoading",value:function(e){this._formElementSubmitButton.textContent=!0===e?"Сохранение...":"Сохранить"}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function q(){return q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=A(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},q.apply(this,arguments)}function A(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}function T(e,t){return T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},T(e,t)}function B(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var N=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&T(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(r);if(o){var n=x(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return B(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._popupElement=document.querySelector(e),t._popupZoomImageImg=t._popupElement.querySelector(".popup__image"),t._popupZoomImageTitle=t._popupElement.querySelector(".popup__description"),t}return t=a,(n=[{key:"open",value:function(e,t){this._popupZoomImageImg.src=e,this._popupZoomImageImg.alt=t,this._popupZoomImageTitle.textContent=t,q(x(a.prototype),"open",this).call(this)}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function U(e){return U="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},U(e)}function D(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=V(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},F.apply(this,arguments)}function V(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}function M(e,t){return M=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},M(e,t)}function Z(e,t){if(t&&("object"===U(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}var J=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&M(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=H(r);if(o){var n=H(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return Z(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._formElement=t._popupElement.querySelector(".popup__form"),t}return t=a,(n=[{key:"setEventListener",value:function(){var e=this;this._formElement.addEventListener("submit",(function(t){return e._handlerSubmitForm(t)})),F(H(a.prototype),"setEventListener",this).call(this)}},{key:"changeHandlerSubmitForm",value:function(e){this._handlerSubmitForm=e}}])&&D(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(g);function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var $=function(){function e(t){var n=t.inputProfileName,r=t.inputProfileAbout,o=t.inputProfileAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._inputProfileName=document.querySelector(n),this._inputProfileAbout=document.querySelector(r),this._inputProfileAvatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._inputProfileName.textContent,userDescription:this._inputProfileAbout.textContent}}},{key:"setUserInfo",value:function(e){var t=e.userName,n=e.userDescription;this._inputProfileName.textContent=t,this._inputProfileAbout.textContent=n}},{key:"setUserAvatar",value:function(e){var t=e.userAvatarLink;this._inputProfileAvatar.src=t}},{key:"saveUserId",value:function(e){this._userId=e}},{key:"getUserId",value:function(){return this._userId}}])&&z(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var K=new h({address:"https://mesto.nomoreparties.co/v1/cohort-41",headers:{authorization:"b998bf4e-efa3-49ce-b447-6c7ee02ac497","Content-Type":"application/json"}}),Q=new $({inputProfileName:".profile__name",inputProfileAbout:".profile__about",inputProfileAvatar:".profile__avatar"});K.getServerData().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return G(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?G(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];Q.setUserInfo({userName:i.name,userDescription:i.about}),Q.setUserAvatar({userAvatarLink:i.avatar}),Q.saveUserId(i._id),W.renderItems(o)})).catch((function(e){console.error(e)}));var W=new b({renderer:function(e){var t=ee(e,f);W.addItem(t)}},".elements"),X=new I(".popup_mesto",(function(e){e.preventDefault(),X.renderLoading(!0);var t=X.getFormInputValues(),n={name:t.name,link:t.url};K.addNewMesto(n).then((function(e){var t=ee(e,f);W.addNewItem(t),X.close()})).catch((function(e){console.error(e)})).finally((function(){X.renderLoading(!1)}))}));X.setEventListener();var Y=new m(r,X.getPopupForm());function ee(e,t){var n=new y({data:e,cardSelector:t,userId:Q.getUserId(),handleCardClick:function(){ae.open(e.link,e.name)},handleLikeButtonClick:function(){n.isLiked?K.deleteLikeMesto(n.getCardId()).then((function(e){n.removeLike(),n.updateLikes(e.likes)})).catch((function(e){console.error(e)})):K.addLikeMesto(n.getCardId()).then((function(e){n.setLike(),n.updateLikes(e.likes)})).catch((function(e){console.error(e)}))},handleRemoveButtonClick:function(e){var t=e.target.closest(".element"),r=n.getCardId();ie.changeHandlerSubmitForm((function(e){e.preventDefault(),K.removeMesto(r).then((function(){t.remove(),ie.close()})).catch((function(e){console.error(e)}))})),ie.open()}});return n.generateCard()}Y.enableValidation(),l.addEventListener("click",(function(){Y.resetValidation(),X.open()}));var te=new I(".popup_profile",(function(e){e.preventDefault(),te.renderLoading(!0);var t=te.getFormInputValues();K.updateUserInfo({name:t.nameinput,about:t.aboutinput}).then((function(e){Q.setUserInfo({userName:e.name,userDescription:e.about}),te.close()})).catch((function(e){console.error(e)})).finally((function(){te.renderLoading(!1)}))}));te.setEventListener();var ne=new m(r,te.getPopupForm());ne.enableValidation(),s.addEventListener("click",(function(){var e=Q.getUserInfo();a.value=e.userDescription,i.value=e.userName,ne.resetValidation(),te.open()}));var re=new I(".popup_newavatar",(function(e){e.preventDefault(),re.renderLoading(!0);var t=re.getFormInputValues();K.updateProfileAvatar({avatar:t.urlavatar}).then((function(e){Q.setUserAvatar({userAvatarLink:e.avatar}),re.close()})).catch((function(e){console.error(e)})).finally((function(){re.renderLoading(!1)}))}));re.setEventListener();var oe=new m(r,re.getPopupForm());oe.enableValidation(),u.addEventListener("click",(function(){oe.resetValidation(),re.open()}));var ie=new J(".popup_confirmation");ie.setEventListener();var ae=new N(".popup_zoom");ae.setEventListener()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,